# Created by code-monkey | 2025-10-22

"""
Configuration descriptors for all external API providers.
This file contains the descriptor dictionaries that define how to interact with
different external APIs, including authentication, base URLs, and normalization callbacks.
"""

import os
import requests
from flask import current_app
from .api_provider_core import TokenCache


def _refresh_tvdb_token():
    """
    Refresh callback for TVDB token cache.
    Handles authentication with TheTVDB API and returns a new token.
    
    Returns:
        str: The new API token or None if authentication failed
    """
    try:
        # Get API key from environment or config
        api_key = current_app.config.get('TVDB_API_KEY') or os.getenv('TVDB_API_KEY')
        if not api_key:
            return None
            
        # TVDB API login endpoint
        login_url = 'https://api4.thetvdb.com/v4/login'
        
        headers = {
            'accept': 'application/json',
            'Content-Type': 'application/json'
        }
        
        payload = {
            'apikey': api_key
        }
        
        response = requests.post(login_url, json=payload, headers=headers)
        
        if response.status_code == 200:
            data = response.json()
            if data.get('status') == 'success':
                token_info = data.get('data', {})
                return token_info.get('token')
                
        return None
    except Exception:
        return None


# Create TVDB token cache instance
# TVDB tokens expire after 25 days, so we set expiry to 24 hours for safety
TVDB_TOKEN_CACHE = TokenCache(
    cache_dir=os.path.join(os.path.dirname(__file__), 'cache'),
    provider_name='tvdb',
    expiry_seconds=86400,  # 24 hours
    refresh_callback=_refresh_tvdb_token
)


# TVDB API provider descriptor
TVDB_DESCRIPTOR = {
    'name': 'TVDB',
    'base_url': current_app.config.get('TVDB_BASE_URL', 'https://api4.thetvdb.com/v4'),
    'auth_strategy': 'bearer_token',
    'token_cache': TVDB_TOKEN_CACHE,
    'header_builder': lambda token: {'Authorization': f'Bearer {token}'},
    'normalization_callbacks': {
        'search': lambda data: data,
        'details': lambda data: data
    }
}

# Created by code-monkey | 2025-10-22
# TMDB API provider descriptor
TMDB_DESCRIPTOR = {
    'name': 'TMDB',
    'base_url': current_app.config['TMDB_API_BASE_URL'],
    'auth_strategy': 'static_token',
    'static_token': current_app.config['TMDB_API_READ_ACCESS_TOKEN'],
    'header_builder': lambda token: {'Authorization': f'Bearer {token}'},
    'normalization_callbacks': {
        'search': lambda data: data,
        'details': lambda data: data
    }
}